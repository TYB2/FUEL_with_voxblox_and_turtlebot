<launch>
  <arg name="mav_name" default="firefly" />
  <arg name="waypoint_x" default="0" />
  <arg name="waypoint_y" default="0" />
  <arg name="waypoint_z" default="1" />
  <arg name="subscript" default="" />
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <!-- <arg name="param_file" default="$(find exploration_manager)/resource/exploration.yaml" /> -->
  <arg name="tf_frame" default="navigation" />
  <arg name="pcl_topic" default="/pointcloudOut" />
  <arg name="stl_file_path" default="" />
  <arg name="mesh_resolution" default="1.0" />
  <arg name="resolution" default="0.4" />
  <arg name="visualize_max_z" default="999" />
  <arg name="sensor_max_range" default="5.0" />
  <arg name="peer_vehicle_pose_topic_1" default="peer_pose_1" />
  <arg name="peer_vehicle_pose_topic_2" default="peer_pose_2" />
  <arg name="peer_vehicle_pose_topic_3" default="peer_pose_3" />
  
  <node pkg="tf" type="static_transform_publisher" name="tf_1$(arg subscript)" args="0 0 0 0 0 0 $(arg mav_name)$(arg subscript)/vi_sensor/base_link fcu$(arg subscript) 1" />
  <node pkg="tf" type="static_transform_publisher" name="tf_2$(arg subscript)" args="0.015 0.055 0.0065 -1.57 0.1 -1.57 fcu$(arg subscript) $(arg mav_name)$(arg subscript)/vi_sensor/camera_depth_optical_center_link 1" />
  <node pkg="tf" type="static_transform_publisher" name="tf_3$(arg subscript)" args="0.015 0.055 0.0065 -1.57 0.1 -1.57 fcu$(arg subscript) $(arg mav_name)$(arg subscript)/vi_sensor/camera_left_link 1" />
  <node pkg="tf" type="static_transform_publisher" name="tf_4$(arg subscript)" args="0.015 -0.055 0.0065 -1.57 0.1 -1.57 fcu$(arg subscript) $(arg mav_name)$(arg subscript)/vi_sensor/camera_right_link 1" />
  
  <group ns="$(arg mav_name)$(arg subscript)">
    <param name="wp_x" type="double" value="$(arg waypoint_x)" />
    <param name="wp_y" type="double" value="$(arg waypoint_y)" />
    <param name="wp_z" type="double" value="$(arg waypoint_z)" />
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)$(arg subscript)" />
      <arg name="model" value="$(find rotors_description)/urdf/firefly_vi_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
      <arg name="x" value="$(arg waypoint_x)"/>
      <arg name="y" value="$(arg waypoint_y)"/>
      <arg name="z" value="0.1"/>
      <!--arg name="tf_prefix" default="$(arg mav_name)$(arg subscript)"/-->
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>

    <!-- Voxblox arguments -->
    <arg name="voxel_size" default="0.20"/>
    <arg name="voxels_per_side" default="16"/>
    <arg name="ray_length" default="5.0"/>
    <arg name="method" default="merged"/>
    <arg name="verbose_voxblox" default="true"/>
    <node name="voxblox_node" pkg="voxblox_ros" type="esdf_server" output="screen" args="-alsologtostderr" clear_params="true">
      <remap from="pointcloud" to="$(arg pcl_topic)"/>

      <param name="publish_tsdf_map" value="true" />
      <param name="publish_esdf_map" value="true" />
      <param name="update_mesh_every_n_sec" value="0.25" />
      <param name="update_esdf_every_n_sec" value="0.25" />
      <param name="publish_map_every_n_sec" value="0.25" />

      <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
      <param name="tsdf_voxels_per_side" value="$(arg voxels_per_side)" />
      <param name="color_mode" value="color" />
      <param name="method" value="$(arg method)" />
      <param name="max_ray_length" value="$(arg ray_length)" />
      <param name="allow_clear" value="true" />
      <param name="verbose" value="$(arg verbose_voxblox)" />
      <param name="publish_map_incremental" value="true" />

      <param name="publish_traversable" value="true" />               <!-- -->
      <param name="publish_slices" value="true" />                    <!-- -->
      <param name="publish_pointclouds_on_update" value="true" />     <!-- -->

    </node> 
    
    <node name="exploration" pkg="exploration_manager" type="exploration" output="screen" >
      <!-- <rosparam command="load" file="$(arg param_file)" /> -->
    </node>
  </group>
</launch>
